<?php
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

namespace PaymentBundle\Model;
use Symfony\Component\DependencyInjection\ContainerInterface;
/**
 * Description of Payment
 *
 * @author para-soft7
 */
class Payment
{
    const CMD_HOLD_PAYMENT    = "HOLD_PAYMENT";
    const CMD_PROCESS_PAYMENT = "PROCESS_PAYMENT";
    const CORPO_ON_ACCOUNT    = "coa";
    const CREDIT_CARD         = "cc";
    const TRX_TYPE_FLIGHTS    = 1;
    const TRX_TYPE_HOTELS     = 2;
    const TRX_TYPE_DEALS      = 3;
    const TRX_TYPE_DEFAULT    = 0;

    /*
     * Id of each module
     */
    private $trxTypeId;

    /**
     *
     * @var type
     */
    private $type;

    /*
     * Payment Provider, the PaymentGateway Provider that we are dealing with
     */
    private $paymentProvider;
    /*
     * payment type, if by creditcard or on corpo account or other way to make a payment
     */
    private $paymentType;

    /**
     * @var varchar uuid Number
     * expected Values ("AUTHORIZATION", "PURCHASE")
     */
    private $number;

    /**
     * @var string  command
     * expected Values ("AUTHORIZATION", "PURCHASE")
     */
    private $command = '';

    /**
     * @var decimal order amount
     */
    private $amount = 100.00;

    /**
     * @var string order currency
     */

    private $currency = null;


    /**
     * @var string Module name
     */

    private $moduleName = NULL;


    /**
     * @var string you can change it to your email
     */
    private $customerEmail = '';

    /**
     * @var sting customer full name, other then the cardholder name
     */
    private $customerFullName = '';

    /**
     * callBackUrl of the payment (the default will be return to the payment method with the payment details and status
     */
    private $callBackUrl = '';

    /**
     * callBackUrl of the payment (the default will be return to the payment method with the payment details and status
     */
    private $clientId            = 0;
    /*
     * mdule transaction sent by the module using hte payment Module
     */
    private $moduleTransactionId = '';
    /*
     * the status of each transaction made
     */
    private $status;
    /*
     * response code  we received from the paymentGateway
     */
    private $responseCode;
    /*
     * response message  we received from the paymentGateway
     */
    private $responseMessage;
    /*
     * merchant reference generated by ouwer end and send it to the payment gateway
     */
    private $merchantReference;
    /*
     * orginal Amount setter
     */
    private $originalAmount;
    /*
     * DisplayedCurrency
     */
    private $displayedCurrency;

    /**
     *
     * @param type $uuid
     */
    private $displayOriginalAmount;

    /**
     *
     * @param type $uuid
     */
    private $customerIp;
    /*
     * whch browser
     */
    private $userAgent;
    
    private $moduleCurrency = null;
    
    private $moduleAmount = null;

    /**
     * @return mixed
     */
    public function getModuleCurrency()
    {
        return $this->moduleCurrency;
    }

    /**
     * @return mixed
     */
    public function getModuleAmount()
    {
        return $this->moduleAmount;
    }

    /**
     * @param mixed $moduleCurrency
     */
    public function setModuleCurrency($moduleCurrency)
    {
        $this->moduleCurrency = $moduleCurrency;
    }

    /**
     * @param mixed $moduleAmount
     */
    public function setModuleAmount($moduleAmount)
    {
        $this->moduleAmount = $moduleAmount;
    }

    public function setNumber($uuid)
    {
        $this->number = $uuid;
    }
    /*
     * transaction_ID getter
     */

    public function getNumber()
    {
        return $this->number;
    }

    public function setAmount($amount)
    {
        $this->amount = $amount;
    }

    public function getAmount()
    {
        return $this->amount;
    }

    public function setCallBackUrl($callBackUrl)
    {
        $this->callBackUrl = $callBackUrl;
    }

    public function getCallBackUrl()
    {
        return $this->callBackUrl;
    }

    public function setCommand($command)
    {
        $this->command = $command;
    }

    public function getCommand()
    {
        return $this->command;
    }

    public function setCurrency($currency)
    {
        $this->currency = $currency;
    }

    public function getCurrency()
    {
        return $this->currency;
    }

    public function setCustomerEmail($customerEmail)
    {
        $this->customerEmail = $customerEmail;
    }

    public function getCustomerEmail()
    {
        return $this->customerEmail;
    }

    public function setCustomerFullName($customerFullName)
    {
        $this->customerFullName = $customerFullName;
    }

    public function getCustomerFullName()
    {
        return $this->customerFullName;
    }

    public function setModuleName($moduleName)
    {
        $this->moduleName = $moduleName;
    }

    public function getModuleName()
    {
        return $this->moduleName;
    }

    public function setClientId($userId)
    {
        $this->clientId = $userId;
    }

    public function getClientId()
    {
        return $this->clientId;
    }

    public function setModuleTransactionId($moduleTransactionId)
    {
        $this->moduleTransactionId = $moduleTransactionId;
    }

    public function getModuleTransactionId()
    {
        return $this->moduleTransactionId;
    }

    public function setStatus($status)
    {
        $this->status = $status;
    }

    public function getStatus()
    {
        return $this->status;
    }

    public function setResponseCode($responseCode)
    {
        $this->responseCode = $responseCode;
    }

    public function getResponseCode()
    {
        return $this->responseCode;
    }

    public function setResponseMessage($responseMessage)
    {
        $this->responseMessage = $responseMessage;
    }

    public function getResponseMessage()
    {
        return $this->responseMessage;
    }

    public function setMerchantReference($merchantReference)
    {
        $this->merchantReference = $merchantReference;
    }

    public function getMerchantReference()
    {
        return $this->merchantReference;
    }

    public function setPaymentType($paymentType)
    {
        $this->paymentType = $paymentType;
    }

    public function getPaymentType()
    {
        return $this->paymentType;
    }

    public function setPaymentProvider($paymentProvider)
    {
        $this->paymentProvider = $paymentProvider;
    }

    public function getPaymentProvider()
    {
        return $this->paymentProvider;
    }

    public function setTrxTypeId($trxTypeId)
    {
        $this->trxTypeId = $trxTypeId;
    }

    public function getTrxTypeId()
    {
        return $this->trxTypeId;
    }

    public function getOriginalAmount()
    {
        return $this->originalAmount;
    }

    public function getDisplayedCurrency()
    {
        return $this->displayedCurrency;
    }

    public function getDisplayOriginalAmount()
    {
        return $this->displayOriginalAmount;
    }

    public function setOriginalAmount($originalAmount)
    {
        $this->originalAmount = $originalAmount;
    }

    public function setDisplayedCurrency($displayedCurrency)
    {
        $this->displayedCurrency = $displayedCurrency;
    }

    public function setDisplayOriginalAmount($displayOriginalAmount)
    {
        $this->displayOriginalAmount = $displayOriginalAmount;
    }

    public function getCustomerIp()
    {
        return $this->customerIp;
    }

    public function getUserAgent()
    {
        return $this->userAgent;
    }

    public function setCustomerIp($customerIp)
    {
        $this->customerIp = $customerIp;
    }

    public function setUserAgent($userAgent)
    {
        $this->userAgent = $userAgent;
    }

    public function getType()
    {
        return $this->type;
    }

    public function setType($type)
    {
        $this->type = $type;
    }


}

