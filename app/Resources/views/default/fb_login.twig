                        <div class="row no-margin margin_top_30">
                            <div class="col-xs-12 nopad">
                                <p class="font-16 grey margin-bottom-20">{{'Connect using your facebook account'|trans}}</p>
                            </div>
                            <div class="col-xs-12 nopad">
{#                                <a class="btn btn-block btn-social btn-facebook social_btn_style">#}
                                    <fb:login-button  size="large" scope="public_profile,email,user_birthday" onlogin="checkLoginState();">{{'Sign in with Facebook'|trans}}</fb:login-button>
{#				</a>#}
                            </div>
                            <div class="col-md-10 col-xs-12 nopad margin_top_40">
                                <div class="border_grey_2"></div>
                            </div>
                        </div>
<script>
    // This is called with the results from from FB.getLoginStatus().
    function statusChangeCallback(response) {
    //  console.log('statusChangeCallback');
    //  console.log(response);
      // The response object is returned with a status field that lets the
      // app know the current login status of the person.
      // Full docs on the response object can be found in the documentation
      // for FB.getLoginStatus().
      if (response.status === 'connected') {
        // Logged into your app and Facebook.
        DoLoginFb(response);
      } else if (response.status === 'not_authorized') {
        // The person is logged into Facebook, but not your app.
       // document.getElementById('status').innerHTML = 'Please log ' +
       //   'into this app.';
      } else {
        // The person is not logged into Facebook, so we're not sure if
        // they are logged into this app or not.
       // document.getElementById('status').innerHTML = 'Please log ' +
       //   'into Facebook.';
      }
    }

    // This function is called when someone finishes with the Login
    // Button.  See the onlogin handler attached to it in the sample
    // code below.
    function checkLoginState() {
      FB.getLoginStatus(function(response) {
        statusChangeCallback(response);
      });
    }

    window.fbAsyncInit = function() {
    FB.init({
      appId      : "{{ facebook_app_id }}",
      cookie     : true,  // enable cookies to allow the server to access 
                          // the session
      xfbml      : true,  // parse social plugins on this page
      version    : "{{ facebook_default_graph_version }}" // use version 2.2
    });

    // Now that we've initialized the JavaScript SDK, we call 
    // FB.getLoginStatus().  This function gets the state of the
    // person visiting this page and can return one of three states to
    // the callback you provide.  They can be:
    //
    // 1. Logged into your app ('connected')
    // 2. Logged into Facebook, but not your app ('not_authorized')
    // 3. Not logged into Facebook and can't tell if they are logged into
    //    your app or not.
    //
    // These three cases are handled in the callback function.

    //FB.getLoginStatus(function(response) {
    //  statusChangeCallback(response);
    // });

    };

    // Load the SDK asynchronously
    (function(d, s, id) {
      var js, fjs = d.getElementsByTagName(s)[0];
      if (d.getElementById(id)) return;
      js = d.createElement(s); js.id = id;
      js.src = "//connect.facebook.net/en_US/sdk.js";
      fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));

    // Here we run a very simple test of the Graph API after login is
    // successful.  See statusChangeCallback() for when this call is made.
    function DoLoginFb(response) {
	var latitude=0;
	var longitude=0;
	try{
	    latitude = google.loader.ClientLocation.latitude;
	    longitude = google.loader.ClientLocation.longitude;
	}catch(e){
	}
	
	$('.upload-overlay-loading-fix').show();
	$.ajax({
	    url: generateLangURL("/ajax/process_fb"),
	    data: {
		access_token: response.authResponse.accessToken,
		longitude: longitude,
		latitude: latitude
	    },
	    type: 'post',
	    success: function (data) {
		$('.upload-overlay-loading-fix').hide();
		var jres = null;
		try {
		    jres = data;
		    var status = jres.status;
		} catch (Ex) {
		}
		if (!jres) {
		    return;
		}

		if( jres.status == 'error' ){
		    ttModal.alert(jres.msg, null, null, {ok:{value:Translator.trans("close")}});
		}else{
		    $('#username').val(jres.uname);
		    $('#password').val(jres.fb_user);
		    $('#LogInSignIn').prop('type', 'submit');
		    $('#LogInSignIn').click();
		}
	    }
	});
    }
</script>
<!--
  Below we include the Login Button social plugin. This button uses
  the JavaScript SDK to present a graphical Login button that triggers
  the FB.login() function when clicked.
-->
